"local guidConcatFunc   = \"{3C0C3DEF-DC94-4043-9073-4B21E10419A3}\"\n"
"local guidLessThanFunc = \"{9FFB88AB-5676-4345-85B8-B30EBB5C4CE2}\"\n"
"local guidToPtrFunc    = \"{6E540BD9-836B-4419-998F-97D6E21295AA}\"\n"
"local guidLPCall       = \"{84A25691-6B47-4b34-AC5D-19C1CB021C8A}\"\n"
"\n"
"local _R = _R\n"
"\n"
"local concat = table.concat\n"
"if not _R[guidConcatFunc] then _R[guidConcatFunc] = function(...)\n"
"    return concat({...})\n"
"end end\n"
"\n"
"if not _R[guidLessThanFunc] then _R[guidLessThanFunc] = function(obj1, obj2)\n"
"    return obj1 < obj2\n"
"end end\n"
"\n"
"local d_getmetatable, d_setmetatable = debug.getmetatable, debug.setmetatable\n"
"local match, tonumber, tostring = string.match, tonumber, tostring\n"
"if not _R[guidToPtrFunc] then _R[guidToPtrFunc] = function(obj)\n"
"    local mt = d_getmetatable(obj)\n"
"    if mt then d_setmetatable(obj, nil) end\n"
"    local retval = tonumber(match(tostring(obj), \"(%x+)$\"), 16)\n"
"    if mt then d_setmetatable(obj, mt) end\n"
"    return retval\n"
"end end\n"
"\n"
"local pcall, unpack = pcall, unpack\n"
"if not _R[guidLPCall] then _R[guidLPCall] = function(func, errfunc, ...)\n"
"    local res = {pcall(func, ...)}\n"
"    if res[1] == true then\n"
"        return 1, unpack(res, 2) --Function executed successfully\n"
"    else\n"
"        if not errfunc then\n"
"            return 2, res[2]     --Function errored, no error handler\n"
"        else\n"
"            res = {pcall(errfunc, res[2])}\n"
"            if res[1] == true then\n"
"                return 3, res[2] --Function errored, error handler ran successfully\n"
"            else\n"
"                return 4, res[2] --Function errored, error handler errored\n"
"            end\n"
"        end\n"
"    end\n"
"end end\n"